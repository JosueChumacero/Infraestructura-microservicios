#see for java tunning https://docs.oracle.com/cd/E15523_01/web.1111/e13814/jvm_tuning.htm#PERFM161
version: '3.8'
services:
  #Docker Compose creates a virtual network between the services and the DNS name 
  #used for each service is its name: that’s why it’s possible to use eureka-discovery as the hostname.
  registry-discovery:
    container_name: id-eureka
    networks:
      - spring
    image: core/microservice-docker-eureka:0.0.1-SNAPSHOT
    ports:
      - 8761:8761
    environment:
       - JAVA_OPTS=
         -Xms256M 
         -Xmx256M
         
 ##########################################################################     
 #configuration service
 ##########################################################################  
  configuration:
    container_name: id-config
    image: core/microservice-docker-server:0.0.1-SNAPSHOT
    networks:
      - spring
    volumes:
      #this it use because we are using a local github repository /host/path:/container/path use ./ for relative path
      - ./configuracion:/tmp/configuracion
      #All projets will have a variable value  DEUREKA_SERVER this tell where find a registry-discovery server 
    environment:
      - JAVA_OPTS=
         -Xms256M 
         -Xmx256M
         -DEUREKA_SERVER=http://registry-discovery:8761/eureka/
         -DLOCAL_REPOSITORY=/tmp/configuracion
         #-Dspring.cloud.config.server.native.searchLocations=/var/config-data
    depends_on:
      - registry-discovery
    ports:
      - 8086:8086
      
 ##########################################################################     
 #administration service
 ##########################################################################  
  administration:
    container_name: id-admin
    image: core/microservice-docker-administrador:0.0.1-SNAPSHOT
    networks:
      - spring
      #All projets will have a variable value  DEUREKA_SERVER this tell where find a registry-discovery server 
    environment:
      - JAVA_OPTS=
         -Xms256M 
         -Xmx256M
         -DEUREKA_SERVER=http://registry-discovery:8761/eureka/
         #-Dspring.cloud.config.server.native.searchLocations=/var/config-data
    depends_on:
      - registry-discovery
    ports:
      - 8762:8762
      
 ##########################################################################     
 #product service
 ##########################################################################  
  product-catalog:
    container_name: bd-product-catalog
    image: core/microservice-docker-producto:0.0.1-SNAPSHOT
    networks:
      - spring
    environment:
       - JAVA_OPTS=
         -Xms256M 
         -Xmx256M
         -DEUREKA_SERVER=http://registry-discovery:8761/eureka/
         -Dspring.profiles.active=production
    depends_on:
      - registry-discovery
      - configuration
    ports:
      - 8083:8083 
      
 ##########################################################################     
 #customer service
 ##########################################################################        
  customer:
    container_name: bd-customer
    image: core/microservice-docker-cliente:0.0.1-SNAPSHOT
    networks:
      - spring
    environment:
      - JAVA_OPTS=
         -Xms256M 
         -Xmx256M
         -DEUREKA_SERVER=http://registry-discovery:8761/eureka/
         -Dspring.profiles.active=production
    depends_on:
      - registry-discovery
      - configuration
    ports:
      - 8084:8084
      
 ##########################################################################     
 #transaction service
 ##########################################################################  
  transactions:
    container_name: bd-transactions
    image: core/microservice-docker-transacciones:0.0.1-SNAPSHOT
    networks:
      - spring
    environment:
      - JAVA_OPTS=
         -Xms256M 
         -Xmx256M
         -DEUREKA_SERVER=http://registry-discovery:8761/eureka/
         -Dspring.profiles.active=production
    depends_on:
      - registry-discovery
      - configuration
    ports:
      - 8082:8082   
      
 ##########################################################################     
 #database service
 ##########################################################################       
  postgres_db:
    container_name: postgres
    image: postgres:latest
    networks:
      - spring
    ports:
        - 3432:5432
    volumes:
        #allow *.sql, *.sql.gz, or *.sh and is execute only if data directory is empty
        - ./dbfiles:/docker-entrypoint-initdb.d
        - /var/lib/postgres_data:/var/lib/postgresql/data
    environment:
        #default postgres super user
        POSTGRES_USER: postgres
         #default passwor for postgres super user, it is only the required envvar for postgres image
        POSTGRES_PASSWORD: qwerty
        #main database if name is not specific thname of super user is use
        POSTGRES_DB: postgres  

 ##########################################################################     
 #pgadmin service
 ##########################################################################  
  pgadmin4:
    image: dpage/pgadmin4
    restart: always
    networks:
      - spring
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@admin.com"
      PGADMIN_DEFAULT_PASSWORD: "qwerty"
    ports:
      - 80:80
    depends_on:
      - postgres_db
networks:
  spring:
    name: spring

      


    